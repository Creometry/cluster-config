# The default namespace to be applied to resources. This field is not used to
# enforce or lock down the deployment to a specific namespace, but instead
# provide the default value of the namespace field if one is not specified
# in the manifests.
# Default: default
defaultNamespace: sealed-secrets

# All resources will be assigned to this namespace and if any cluster scoped
# resource exists the deployment will fail.
# Default: ""
namespace: ""

# # namespaceLabels are labels that will be appended to the namespace created by Fleet.
# namespaceLabels:
#   key: value
# # namespaceAnnotations are annotations that will be appended to the namespace created by Fleet.
# namespaceAnnotations:
#   key: value

# # Optional map of labels, that are set at the bundle and can be used in a
# # dependsOn.selector
# labels:
#   key: value

# kustomize:
#   # Use a custom folder for kustomize resources. This folder must contain
#   # a kustomization.yaml file.
#   dir: ./kustomize

helm:
  # Use a custom location for the Helm chart. This can refer to any go-getter URL or
  # OCI registry based helm chart URL e.g. "oci://ghcr.io/fleetrepoci/guestbook".
  # This allows one to download charts from most any location.  Also know that
  # go-getter URL supports adding a digest to validate the download. If repo
  # is set below this field is the name of the chart to lookup
  chart: sealed-secrets
  # A https URL to a Helm repo to download the chart from. It's typically easier
  # to just use `chart` field and refer to a tgz file.  If repo is used the
  # value of `chart` will be used as the chart name to lookup in the Helm repository.
  repo: https://bitnami-labs.github.io/sealed-secrets
  # A custom release name to deploy the chart as. If not specified a release name
  # will be generated by combining the invoking GitRepo.name + GitRepo.path.
  releaseName: sealed-secrets
  # Makes helm skip the check for its own annotations
  takeOwnership: false
  # The version of the chart or semver constraint of the chart to find. If a constraint
  # is specified it is evaluated each time git changes.
  # The version also determines which chart to download from OCI registries.
  version: 2.11.0
  # Any values that should be placed in the `values.yaml` and passed to helm during
  # install.
  values:
      ## @section Common parameters

    ## @param kubeVersion Override Kubernetes version
    ##
    kubeVersion: ""
    ## @param nameOverride String to partially override sealed-secrets.fullname
    ##
    nameOverride: ""
    ## @param fullnameOverride String to fully override sealed-secrets.fullname
    ##
    fullnameOverride: ""
    ## @param namespace Namespace where to deploy the Sealed Secrets controller
    ##
    namespace: "sealed-secret"

    ## @param extraDeploy [array] Array of extra objects to deploy with the release
    ##
    extraDeploy: []
    ## @param commonAnnotations [object] Annotations to add to all deployed resources
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    commonAnnotations: {}

    ## @section Sealed Secrets Parameters

    ## Sealed Secrets image
    ## ref: https://hub.docker.com/r/bitnami/sealed-secrets-controller/tags
    ## @param image.registry Sealed Secrets image registry
    ## @param image.repository Sealed Secrets image repository
    ## @param image.tag Sealed Secrets image tag (immutable tags are recommended)
    ## @param image.pullPolicy Sealed Secrets image pull policy
    ## @param image.pullSecrets [array]  Sealed Secrets image pull secrets
    ##
    image:
      registry: docker.io
      repository: bitnami/sealed-secrets-controller
      #tag: v0.23.0
      ## Specify a imagePullPolicy
      ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
      ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
      ##
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## e.g:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
    ## @param revisionHistoryLimit Number of old history to retain to allow rollback (If not set, default Kubernetes value is set to 10)
    ## e.g:
    revisionHistoryLimit: ""
    ## @param createController Specifies whether the Sealed Secrets controller should be created
    ##
    createController: true
    ## @param secretName The name of an existing TLS secret containing the key used to encrypt secrets
    ##
    secretName: "sealed-secrets-key"
    ## @param updateStatus Specifies whether the Sealed Secrets controller should update the status subresource
    ##
    updateStatus: true
    ## @param skipRecreate Specifies whether the Sealed Secrets controller should skip recreating removed secrets
    ## Setting it to false allows to optionally restore backward compatibility in low priviledge
    ## environments when old versions of the controller did not require watch permissions on secrets
    ## for secret re-creation.
    ##
    skipRecreate: false
    ## @param keyrenewperiod Specifies key renewal period. Default 30 days
    ## e.g
    ## keyrenewperiod: "720h30m"
    ##
    keyrenewperiod: ""
    ## @param rateLimit Number of allowed sustained request per second for verify endpoint
    ##
    rateLimit: ""
    ## @param rateLimitBurst Number of requests allowed to exceed the rate limit per second for verify endpoint
    ##
    rateLimitBurst: ""
    ## @param additionalNamespaces List of namespaces used to manage the Sealed Secrets
    ##
    additionalNamespaces: []
    ## @param privateKeyAnnotations Map of annotations to be set on the sealing keypairs
    ## 
    privateKeyAnnotations: {}
    ## @param privateKeyLabels Map of labels to be set on the sealing keypairs
    ## 
    privateKeyLabels: {}
    ## @param logInfoStdout Specifies whether the Sealed Secrets controller will log info to stdout
    ##
    logInfoStdout: false
    ## @param command Override default container command
    ##
    command: []
    ## @param args Override default container args
    ##
    args: []
    ## Configure extra options for Sealed Secret containers' liveness, readiness and startup probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
    ## @param livenessProbe.enabled Enable livenessProbe on Sealed Secret containers
    ## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1
    ## @param readinessProbe.enabled Enable readinessProbe on Sealed Secret containers
    ## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1
    ## @param startupProbe.enabled Enable startupProbe on Sealed Secret containers
    ## @param startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param startupProbe.periodSeconds Period seconds for startupProbe
    ## @param startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: false
      initialDelaySeconds: 0
      periodSeconds: 10
      timeoutSeconds: 1
      failureThreshold: 3
      successThreshold: 1
    ## @param customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## @param customStartupProbe Custom startupProbe that overrides the default one
    ##
    customStartupProbe: {}
    ## Sealed Secret resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ## @param resources.limits [object] The resources limits for the Sealed Secret containers
    ## @param resources.requests [object] The requested resources for the Sealed Secret containers
    ##
    resources:
      limits: {}
      requests: 
        cpu: 1m
        memory: 1Mi
    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param podSecurityContext.enabled Enabled Sealed Secret pods' Security Context
    ## @param podSecurityContext.fsGroup Set Sealed Secret pod's Security Context fsGroup
    ##
    podSecurityContext:
      enabled: true
      fsGroup: 65534
    ## Configure Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param containerSecurityContext.enabled Enabled Sealed Secret containers' Security Context
    ## @param containerSecurityContext.readOnlyRootFilesystem Whether the Sealed Secret container has a read-only root filesystem
    ## @param containerSecurityContext.runAsNonRoot Indicates that the Sealed Secret container must run as a non-root user
    ## @param containerSecurityContext.runAsUser Set Sealed Secret containers' Security Context runAsUser
    ## @extra containerSecurityContext.capabilities Adds and removes POSIX capabilities from running containers (see `values.yaml`)
    ## @skip  containerSecurityContext.capabilities.drop
    ##
    containerSecurityContext:
      enabled: true
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1001
      capabilities:
        drop:
          - ALL

    ## @param podLabels [object] Extra labels for Sealed Secret pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param podAnnotations [object] Annotations for Sealed Secret pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param priorityClassName Sealed Secret pods' priorityClassName
    ##
    priorityClassName: ""
    ## @param runtimeClassName Sealed Secret pods' runtimeClassName
    ##
    runtimeClassName: ""
    ## @param affinity [object] Affinity for Sealed Secret pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ##
    affinity: {}
    ## @param nodeSelector [object] Node labels for Sealed Secret pods assignment
    ## ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}
    ## @param tolerations [array] Tolerations for Sealed Secret pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## @param additionalVolumes [object] Extra Volumes for the Sealed Secrets Controller Deployment
    ## ref: https://kubernetes.io/docs/concepts/storage/volumes/
    ##
    additionalVolumes: []
    ## @param additionalVolumeMounts [object] Extra volumeMounts for the Sealed Secrets Controller container
    ## ref: https://kubernetes.io/docs/concepts/storage/volumes/
    ##
    additionalVolumeMounts: []
    ## @param hostNetwork Sealed Secrets pods' hostNetwork
    hostNetwork: false
    ## @param dnsPolicy Sealed Secrets pods' dnsPolicy
    dnsPolicy: ""

    ## @section Traffic Exposure Parameters

    ## Sealed Secret service parameters
    ##
    service:
      ## @param service.type Sealed Secret service type
      ##
      type: ClusterIP
      ## @param service.port Sealed Secret service HTTP port
      ##
      port: 8080
      ## @param service.nodePort Node port for HTTP
      ## Specify the nodePort value for the LoadBalancer and NodePort service types
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ## NOTE: choose port between <30000-32767>
      ##
      nodePort: ""
      ## @param service.annotations [object] Additional custom annotations for Sealed Secret service
      ##
      annotations: {}
    ## Sealed Secret ingress parameters
    ## ref: http://kubernetes.io/docs/user-guide/ingress/
    ##
    ingress:
      ## @param ingress.enabled Enable ingress record generation for Sealed Secret
      ##
      enabled: false
      ## @param ingress.pathType Ingress path type
      ##
      pathType: ImplementationSpecific
      ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
      ##
      apiVersion: ""
      ## @param ingress.ingressClassName IngressClass that will be be used to implement the Ingress
      ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster.
      ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
      ##
      ingressClassName: ""
      ## @param ingress.hostname Default host for the ingress record
      ##
      hostname: sealed-secrets.local
      ## @param ingress.path Default path for the ingress record
      ##
      path: /v1/cert.pem
      ## @param ingress.annotations [object] Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
      ## Use this parameter to set the required annotations for cert-manager, see
      ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
      ## e.g:
      ## annotations:
      ##   kubernetes.io/ingress.class: nginx
      ##   cert-manager.io/cluster-issuer: cluster-issuer-name
      ##
      annotations: {}
      ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
      ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
      ## You can:
      ##   - Use the `ingress.secrets` parameter to create this TLS secret
      ##   - Relay on cert-manager to create it by setting the corresponding annotations
      ##   - Relay on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
      ##
      tls: false
      ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
      ##
      selfSigned: false
      ## @param ingress.extraHosts [array] An array with additional hostname(s) to be covered with the ingress record
      ## e.g:
      ## extraHosts:
      ##   - name: sealed-secrets.local
      ##     path: /
      ##
      extraHosts: []
      ## @param ingress.extraPaths [array] An array with additional arbitrary paths that may need to be added to the ingress under the main host
      ## e.g:
      ## extraPaths:
      ## - path: /*
      ##   backend:
      ##     serviceName: ssl-redirect
      ##     servicePort: use-annotation
      ##
      extraPaths: []
      ## @param ingress.extraTls [array] TLS configuration for additional hostname(s) to be covered with this ingress record
      ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
      ## e.g:
      ## extraTls:
      ## - hosts:
      ##     - sealed-secrets.local
      ##   secretName: sealed-secrets.local-tls
      ##
      extraTls: []
      ## @param ingress.secrets [array] Custom TLS certificates as secrets
      ## NOTE: 'key' and 'certificate' are expected in PEM format
      ## NOTE: 'name' should line up with a 'secretName' set further up
      ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
      ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
      ## It is also possible to create and manage the certificates outside of this helm chart
      ## Please see README.md for more information
      ## e.g:
      ## secrets:
      ##   - name: sealed-secrets.local-tls
      ##     key: |-
      ##       -----BEGIN RSA PRIVATE KEY-----
      ##       ...
      ##       -----END RSA PRIVATE KEY-----
      ##     certificate: |-
      ##       -----BEGIN CERTIFICATE-----
      ##       ...
      ##       -----END CERTIFICATE-----
      ##
      secrets: []
    ## Network policies
    ## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
    ##
    networkPolicy:
      ## @param networkPolicy.enabled Specifies whether a NetworkPolicy should be created
      ##
      enabled: false
      ## NetworkPolicy Egress configuration
      ##
      egress:
        ## @param networkPolicy.egress.enabled Specifies wheter a egress is set in the NetworkPolicy
        ##
        enabled: false
        ## @param networkPolicy.egress.kubeapiCidr Specifies the kubeapiCidr, which is the only egress allowed. If not set, kubeapiCidr will be found using Helm lookup
        ##
        kubeapiCidr: ""
        ## @param networkPolicy.egress.kubeapiPort Specifies the kubeapiPort, which is the only egress allowed. If not set, kubeapiPort will be found using Helm lookup
        ##
        kubeapiPort: ""

    ## @section Other Parameters

    ## ServiceAccount configuration
    ##
    serviceAccount:
      ## @param serviceAccount.annotations [object] Annotations for Sealed Secret service account
      ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
      ##
      annotations: {}
      ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
      ##
      create: true
      ## @param serviceAccount.labels Extra labels to be added to the ServiceAccount
      ##
      labels: {}
      ## @param serviceAccount.name The name of the ServiceAccount to use.
      ## If not set and create is true, a name is generated using the sealed-secrets.fullname template
      ##
      name: ""
    ## RBAC configuration
    ##
    rbac:
      ## @param rbac.create Specifies whether RBAC resources should be created
      ##
      create: true
      ## @param rbac.clusterRole Specifies whether the Cluster Role resource should be created
      ##
      clusterRole: true
      ## @param rbac.clusterRoleName Specifies the name for the Cluster Role resource
      ##
      clusterRoleName: "secrets-unsealer"
      ## @param rbac.namespacedRoles Specifies whether the namespaced Roles should be created (in each of the specified additionalNamespaces)
      ##
      namespacedRoles: false
      ## @param rbac.namespacedRolesName Specifies the name for the namesapced Role resource
      ##
      namespacedRolesName: "secrets-unsealer"
      ## @param rbac.labels Extra labels to be added to RBAC resources
      ##
      labels: {}
      ## @param rbac.pspEnabled PodSecurityPolicy
      ##
      pspEnabled: false

    ## @section Metrics parameters

    metrics:
      ## Prometheus Operator ServiceMonitor configuration
      ##
      serviceMonitor:
        ## @param metrics.serviceMonitor.enabled Specify if a ServiceMonitor will be deployed for Prometheus Operator
        ##
        enabled: enabled
        ## @param metrics.serviceMonitor.namespace Namespace where Prometheus Operator is running in
        ##
        namespace: sealed-secrets
        ## @param metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
        ##
        labels: {}
        ## @param metrics.serviceMonitor.annotations Extra annotations for the ServiceMonitor
        ##
        annotations: {}
        ## @param metrics.serviceMonitor.interval How frequently to scrape metrics
        ## e.g:
        ## interval: 10s
        ##
        interval: ""
        ## @param metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
        ## e.g:
        ## scrapeTimeout: 10s
        ##
        scrapeTimeout: ""
        ## @param metrics.serviceMonitor.honorLabels Specify if ServiceMonitor endPoints will honor labels
        ##
        honorLabels: true
        ## @param metrics.serviceMonitor.metricRelabelings [array] Specify additional relabeling of metrics
        ##
        metricRelabelings: []
        ## @param metrics.serviceMonitor.relabelings [array] Specify general relabeling
        ##
        relabelings: []
      ## Grafana dashboards configuration
      ##
      dashboards:
        ## @param metrics.dashboards.create Specifies whether a ConfigMap with a Grafana dashboard configuration should be created
        ## ref https://github.com/helm/charts/tree/master/stable/grafana#configuration
        ##
        create: true
        ## @param metrics.dashboards.labels Extra labels to be added to the Grafana dashboard ConfigMap
        ##
        labels: {}
        ## @param metrics.dashboards.namespace Namespace where Grafana dashboard ConfigMap is deployed
        ##
        namespace: monitoring


 ##### Fleet syntax for custom values 
#     any-custom: value
#   # All labels on Rancher clusters are available using global.fleet.clusterLabels.LABELNAME
#   # These can now be accessed directly as variables
#   # The variable's value will be an empty string if the referenced cluster label does not
#   # exist on the targeted cluster
#     variableName: global.fleet.clusterLabels.LABELNAME
#   # It is possible to specify the keys and values as go template strings for
#   # advanced templating needs. Most of the functions from the sprig templating
#   # library are available. Note, if the functions output changes with every
#   # call, e.g. `uuidv4`, the bundle will get redeployed.
#   # The template context has following keys.
#   # `.ClusterValues` are retrieved from target cluster's `spec.templateValues`
#   # `.ClusterLabels` and `.ClusterAnnotations` are the labels and annoations in the cluster resource.
#   # `.ClusterName` as the fleet's cluster resource name.
#   # `.ClusterNamespace` as the namespace in which the cluster resource exists.
#   # Note: The fleet.yaml must be valid yaml. Templating uses ${ } as delims,
#   #       unlike helm which uses {{ }}.
#     templatedLabel: "${ .ClusterLabels.LABELNAME }-foo"
#     valueFromEnv:
#       "${ .ClusterLabels.ENV }": ${ .ClusterValues.someValue | upper | quote }
#   # Path to any values files that need to be passed to helm during install
#   valuesFiles:
#     - values1.yaml
#     - values2.yaml
#   # Allow to use values files from configmaps or secrets defined in the downstream clusters
#   valuesFrom:
#   - configMapKeyRef:
#       name: configmap-values
#       # default to namespace of bundle
#       namespace: default
#       key: values.yaml
#   - secretKeyRef:
#       name: secret-values
#       namespace: default
#       key: values.yaml
#   # Override immutable resources. This could be dangerous.
#   force: false
#   # Set the Helm --atomic flag when upgrading
#   atomic: false
#   # Disable go template pre-processing on the fleet values
#   disablePreProcess: false
#   # if set and timeoutSeconds provided, will wait until all Jobs have been completed before marking the GitRepo as ready.
#   # It will wait for as long as timeoutSeconds
#   waitForJobs: true

# # A paused bundle will not update downstream clusters but instead mark the bundle
# # as OutOfSync. One can then manually confirm that a bundle should be deployed to
# # the downstream clusters.
# # Default: false
# paused: false

# rolloutStrategy:
#     # A number or percentage of clusters that can be unavailable during an update
#     # of a bundle. This follows the same basic approach as a deployment rollout
#     # strategy. Once the number of clusters meets unavailable state update will be
#     # paused. Default value is 100% which doesn't take effect on update.
#     # default: 100%
#     maxUnavailable: 15%
#     # A number or percentage of cluster partitions that can be unavailable during
#     # an update of a bundle.
#     # default: 0
#     maxUnavailablePartitions: 20%
#     # A number of percentage of how to automatically partition clusters if not
#     # specific partitioning strategy is configured.
#     # default: 25%
#     autoPartitionSize: 10%
#     # A list of definitions of partitions.  If any target clusters do not match
#     # the configuration they are added to partitions at the end following the
#     # autoPartitionSize.
#     partitions:
#       # A user friend name given to the partition used for Display (optional).
#       # default: ""
#     - name: canary
#       # A number or percentage of clusters that can be unavailable in this
#       # partition before this partition is treated as done.
#       # default: 10%
#       maxUnavailable: 10%
#       # Selector matching cluster labels to include in this partition
#       clusterSelector:
#         matchLabels:
#           env: prod
#       # A cluster group name to include in this partition
#       clusterGroup: agroup
#       # Selector matching cluster group labels to include in this partition
#       clusterGroupSelector:
#         clusterSelector:
#           matchLabels:
#             env: prod

# # Target customization are used to determine how resources should be modified per target
# # Targets are evaluated in order and the first one to match a cluster is used for that cluster.
# targetCustomizations:
# # The name of target. If not specified a default name of the format "target000"
# # will be used. This value is mostly for display
# - name: prod
#   # Custom namespace value overriding the value at the root
#   namespace: newvalue
#   # Custom defaultNamespace value overriding the value at the root
#   defaultNamespace: newdefaultvalue
#   # Custom kustomize options overriding the options at the root
#   kustomize: {}
#   # Custom Helm options override the options at the root
#   helm: {}
#   # If using raw YAML these are names that map to overlays/{name} that will be used
#   # to replace or patch a resource. If you wish to customize the file ./subdir/resource.yaml
#   # then a file ./overlays/myoverlay/subdir/resource.yaml will replace the base file.
#   # A file named ./overlays/myoverlay/subdir/resource_patch.yaml will patch the base file.
#   # A patch can in JSON Patch or JSON Merge format or a strategic merge patch for builtin
#   # Kubernetes types. Refer to "Raw YAML Resource Customization" below for more information.
#   yaml:
#     overlays:
#     - custom2
#     - custom3
#   # A selector used to match clusters.  The structure is the standard
#   # metav1.LabelSelector format. If clusterGroupSelector or clusterGroup is specified,
#   # clusterSelector will be used only to further refine the selection after
#   # clusterGroupSelector and clusterGroup is evaluated.
#   clusterSelector:
#     matchLabels:
#       env: prod
#   # A selector used to match a specific cluster by name. When using Fleet in
#   # Rancher, make sure to put the name of the clusters.fleet.cattle.io resource.
#   clusterName: dev-cluster
#   # A selector used to match cluster groups.
#   clusterGroupSelector:
#     matchLabels:
#       region: us-east
#   # A specific clusterGroup by name that will be selected
#   clusterGroup: group1
#   # Resources will not be deployed in the matched clusters if doNotDeploy is true.
#   doNotDeploy: false

# # dependsOn allows you to configure dependencies to other bundles. The current bundle
# # will only be deployed, after all dependencies are deployed and in a Ready state.
# dependsOn:
#   # Format: <GITREPO-NAME>-<BUNDLE_PATH> with all path separators replaced by "-"
#   # Example: GitRepo name "one", Bundle path "/multi-cluster/hello-world" => "one-multi-cluster-hello-world"
#   # Note: Bundle names are limited to 53 characters long. If longer they will be shortened:
#   # opni-fleet-examples-fleets-opni-ui-plugin-operator-crd becomes opni-fleet-examples-fleets-opni-ui-plugin-opera-021f7
#   - name: one-multi-cluster-hello-world
#   # Select bundles to depend on based on their label.
#   - selector:
#       matchLabels:
#         app: weak-monkey

# # Ignore fields when monitoring a Bundle. This can be used when Fleet thinks some conditions in Custom Resources
# # makes the Bundle to be in an error state when it shouldn't.
# ignore:
#   # Conditions to be ignored
#   conditions:
#   # In this example a condition will be ignored if it contains {"type": "Active", "status", "False"}
#   - type: Active
#     status: "False"

# # Override targets defined in the GitRepo. The Bundle will not have any targets from the GitRepo if overrideTargets is provided.
# overrideTargets:
#   - clusterSelector:
#       matchLabels:
#         env: dev
